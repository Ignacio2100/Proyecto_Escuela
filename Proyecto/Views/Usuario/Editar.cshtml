@model Proyecto.Models.UsuarioCLS

@{
    ViewBag.Title = "Editar Usuario";
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Escuela Club de Leones - Editar Usuario</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap" rel="stylesheet">
    <style>
        body {
            background-color: #f0f8ff;
            font-family: 'Comic Sans MS', cursive, sans-serif;
        }

        .main-content {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(80vh - 80px);
        }

        .container-login {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 800px;
            max-width: 100%;
            padding: 1rem;
        }

        .login-icon-container {
            text-align: center;
            margin-bottom: 2rem;
        }

        .login-icon {
            font-size: 5rem;
            color: #0288d1;
        }

        .login-title {
            color: #0288d1;
            font-size: 2rem;
            text-align: center;
            margin-bottom: 2rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .form-control {
            border: none;
            border-bottom: 2px solid #0288d1;
            border-radius: 0;
            padding: 0.75rem 0;
            font-size: 1rem;
            background-color: transparent;
            transition: all 0.3s;
        }

            .form-control:focus {
                box-shadow: none;
                border-color: #FFD700;
            }

            .form-control::placeholder {
                color: #aaa;
            }

        .btn-login {
            background: #0288d1;
            border: none;
            color: white;
            padding: 0.75rem;
            font-size: 1rem;
            border-radius: 50px;
            width: 40%;
            margin-top: 1rem;
            transition: all 0.3s;
        }

            .btn-login:hover {
                background: #026da8;
                transform: translateY(-3px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            }

        .toggle-password {
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #0288d1;
        }

        #divRespuesta {
            margin-top: 1rem;
        }
    </style>
</head>
<body>
    <div class="main-content">
        <div class="container-login">
            <div class="login-icon-container">
                <i class="bi bi-person-circle login-icon"></i>
            </div>
            <h2 class="login-title">Editar Usuario</h2>

            @using (Html.BeginForm("Editar", "Usuario", FormMethod.Post, new { id = "frmEditar" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.USUARIO_ID)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.USUARIO_CODIGO, new { @class = "form-control", placeholder = "Código Usuario", required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.USUARIO_EMAIL, new { @class = "form-control", placeholder = "Correo Electrónico", required = "required", type = "email" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.PasswordFor(m => m.USUARIO_PASSWORD, new { @class = "form-control", placeholder = "Nueva Contraseña (dejar en blanco para mantener la actual)", id = "USUARIO_PASSWORD" })
                            <i class="bi bi-eye-slash toggle-password" id="toggleIcon" onclick="togglePassword()"></i>
                        </div>
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.ROL_ID, new SelectList(ViewBag.Roles, "Value", "Text"), "Seleccione un Rol", new { @class = "form-control", required = "required" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-check">
                        @Html.CheckBoxFor(m => m.ESTADO, new { @class = "form-check-input" })
                        @Html.LabelFor(m => m.ESTADO, "Usuario Activo", new { @class = "form-check-label" })
                    </div>
                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-login mt-4 mx-auto">Actualizar Usuario</button>
                </div>

                <div class="row justify-content-center mt-4 mb-4">
                    <div class="col-auto">
                        <a href="@Url.Action("Index", "Usuario")" class="btn btn-warning">Regresar</a>
                    </div>
                </div>
            }
            <div id="divRespuesta"></div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function togglePassword() {
            const passwordInput = document.getElementById('USUARIO_PASSWORD');
            const toggleIcon = document.getElementById('toggleIcon');
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.classList.replace('bi-eye-slash', 'bi-eye');
            } else {
                passwordInput.type = 'password';
                toggleIcon.classList.replace('bi-eye', 'bi-eye-slash');
            }
        }

        $(document).ready(function() {
            $('#frmEditar').submit(function(e) {
                e.preventDefault();
                var formData = $(this).serialize();

                $.ajax({
                    url: '@Url.Action("Editar", "Usuario")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            $('#divRespuesta').html('<div class="alert alert-success">Usuario actualizado con éxito</div>');
                            setTimeout(function() {
                                window.location.href = '@Url.Action("Index", "Usuario")';
                            }, 2000);
                        } else {
                            var errorMessage = response.message || 'Error desconocido al actualizar';
                            $('#divRespuesta').html('<div class="alert alert-danger">Error al actualizar: ' + errorMessage + '</div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr.responseText); // Log the full response for debugging
                        var errorMessage = '';
                        try {
                            var jsonResponse = JSON.parse(xhr.responseText);
                            errorMessage = jsonResponse.message || 'Error desconocido';
                        } catch (e) {
                            errorMessage = 'Error de conexión o respuesta inválida del servidor';
                        }
                        $('#divRespuesta').html('<div class="alert alert-danger">Error: ' + errorMessage + '</div>');
                    }
                });
            });
        });
    </script>
</body>
</html>

