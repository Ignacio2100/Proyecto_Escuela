@model Proyecto.Models.TestCLS
@{
    ViewBag.Title = "Evaluación de Conocimientos";
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f0f8ff;
            font-family: 'Comic Sans MS', cursive, sans-serif;
        }

        .containerr {
            margin-top: 50px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
            padding: 20px;
            max-width: 900px;
            margin-left: auto;
            margin-right: auto;
        }

        h2 {
            color: #ff6347;
            text-align: center;
        }

        .btn-primary {
            background-color: #ff6347;
            border: none;
        }

            .btn-primary:hover {
                background-color: #ff4500;
            }

        .btn-secondary {
            background-color: #5cb85c;
            border: none;
        }

            .btn-secondary:hover {
                background-color: #4cae4c;
            }

        .question {
            border: 2px solid #ff6347;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
            background-color: #fff5f5;
        }

            .question img {
                max-width: 100%;
                height: auto;
                margin-bottom: 10px;
            }

        .options {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
        }

        .option {
            margin: 10px;
            cursor: pointer;
            transition: transform 0.2s;
        }

            .option:hover {
                transform: scale(1.1);
            }

            .option img {
                width: 100px;
                height: 100px;
                object-fit: cover;
                border-radius: 10px;
            }

        .selected {
            border: 3px solid #ff6347;
        }

        .speak-icon {
            cursor: pointer;
            margin-left: 10px;
        }
        h1 {
            text-align: center;
            color: blue;
        }
        .custom-width {
            width: 100%; /* Ajusta el ancho del input al 100% del contenedor */
            max-width: 900px; /* O un valor fijo si prefieres */
        }
    </style>
</head>
<body>
    <div class="containerr">
        <h1>@ViewBag.Title</h1>

        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="alert alert-danger text-center">@ViewBag.Error</div>
        }

        @if (Model.Preguntas != null && Model.Preguntas.Count > 0)
        {
            using (Html.BeginForm("EnviarRespuestas", "Test", FormMethod.Post))
            {
                <div class="mb-4">
                    <label for="NombreEstudiante">Nombre del Estudiante:</label>
                    @Html.TextBoxFor(m => m.NombreEstudiante, new { @class = "form-control custom-width", required = "required", placeholder = "Escribe tu nombre aquí..." })
                </div>

                for (int i = 0; i < Model.Preguntas.Count; i++)
                {
                    <div class="question" data-question-index="@i">
                        <h4>Pregunta @(i + 1)</h4>
                        <img src="@Model.Preguntas[i].ImagenUrl" alt="Imagen de la pregunta" />
                        <img src="https://img.icons8.com/?size=100&id=2795&format=png&color=000000" alt="Reproducir" class="speak-icon" onclick="speakQuestion('@Model.Preguntas[i].Texto')" />
                        @Html.HiddenFor(m => m.Preguntas[i].Id)
                        @Html.HiddenFor(m => m.Preguntas[i].Texto)
                        <div class="options">
                            @for (int j = 0; j < Model.Preguntas[i].Opciones.Count; j++)
                            {
                                <div class="option" onclick="selectOption(this, @Model.Preguntas[i].Opciones[j].Id)">
                                    <img src="@Model.Preguntas[i].Opciones[j].ImagenUrl" alt="Opción @(j + 1)" />
                                </div>
                            }
                        </div>
                        @Html.HiddenFor(m => m.Preguntas[i].RespuestaSeleccionadaId, new { @class = "respuesta-seleccionada" })
                    </div>
                }

                <button type="submit" class="btn btn-primary">Enviar Respuestas</button>
                <button type="button" class="btn btn-secondary" id="recargarPagina">Iniciar de Nuevo</button>
            }
        }
        else
        {
            <div class="alert alert-warning text-center">No se encontraron preguntas disponibles.</div>
        }
    </div>

    <div class="row justify-content-center mt-4 mb-4">
        <div class="col-auto">
            <a href="@Url.Action("Index", "Home")" class="btn btn-warning">Regresar</a>
        </div>
    </div>

    <script>
        function speakQuestion(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            window.speechSynthesis.speak(utterance);
        }

        function selectOption(optionElement, optionId) {
            const questionDiv = optionElement.closest('.question');
            const questionIndex = questionDiv.dataset.questionIndex;

            // Remove 'selected' class from all options in this question
            questionDiv.querySelectorAll('.option img').forEach(img => {
                img.classList.remove('selected');
            });

            // Add 'selected' class to the clicked option
            optionElement.querySelector('img').classList.add('selected');

            // Set the hidden input value
            questionDiv.querySelector('.respuesta-seleccionada').value = optionId;
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("recargarPagina").addEventListener("click", function () {
                location.reload();
            });
        });
    </script>
</body>
</html>
